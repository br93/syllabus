server.port=${PORT:0}
spring.application.name=students-ms

spring.cloud.config.enabled=false
#config.host=localhost
#spring.config.import=optional:configserver:http://${config.host}:8888

eureka.host=localhost
eureka.client.service-url.defaultZone=http://${eureka.server.user}:${eureka.server.password}@${eureka.host}:${eureka.port:8761}/eureka

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.data.mongodb.host=${mongo.host:localhost}
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=${mongo.user}
spring.data.mongodb.password=${mongo.password}
spring.data.mongodb.database=students_db
spring.data.mongodb.port=${mongo.port:27017}

spring.data.mongodb.auto-index-creation=true

spring.data.redis.host=${redis.host:localhost}
spring.data.redis.port=${redis.port:6379}
spring.data.redis.database=0
spring.data.redis.timeout=3000

account.management.name=account-ms
account.management.path=/api/v1/account/user

settings.name=settings-ms
universities.path=/api/v1/config/universities
programs.path=/api/v1/config/programs

message.service.unavailable=service unavailable, try again later

spring.kafka.producer.bootstrap-servers: ${kafka.host:localhost}:${kafka.port:9092}
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer


