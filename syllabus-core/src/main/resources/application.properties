server.port=${PORT:0}
spring.application.name=core-ms

spring.cloud.config.enabled=false

eureka.host=localhost
eureka.client.service-url.defaultZone=http://${eureka.server.user}:${eureka.server.password}@${eureka.host}:8761/eureka

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.database=0
spring.data.redis.timeout=3000

students.name=students-ms
students.path=/api/v1/users

settings.name=settings-ms
course.programs.path=/api/v1/config/course-programs

required.course=Obrigatoria
second.layer.course=Segundo Estrato


message.service.unavailable=service unavailable, try again later

spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: syllabus
spring.kafka.consumer.auto-offset-reset: earliest

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#FROM
spring.kafka.consumer.properties.spring.json.type.mapping=student-response:com.syllabus.data.StudentResponse
#TO
spring.kafka.consumer.properties.spring.json.trusted.packages=*